from UartClass import UartClass
import time
from rpi_motor import Car
from rpi_motor import Motor
from micropython import const
from machine import Pin
from myservo import myServo
from Ultrasonic_Ranging import getSonar

receiver = UartClass(0)
car = Car()

#declarem els pins corresponents de cada un dels components
servo=myServo()

#set servo pin

servo.myServoWriteAngle(0)

#Set Servo Angle
sensor1=Pin(4,Pin.IN) #sensor dret
sensor2=Pin(5,Pin.IN) #sensor central
sensor3=Pin(6,Pin.IN) #sensor esquerre
#ledPin=Pin(14,Pin.OUT)

#declarem els pins del motor
m1 = Motor(12, 13)
m2 = Motor(15, 14)
m3 = Motor(17, 16)
m4 = Motor(18, 19)


while True:
    servo.myServoWriteAngle(90)
    time.sleep_ms(500)
    servo.myServoWriteAngle(0)

#     if(receiver.is_started() == True):
    #car.move(25) #para comprobar que se mueve
    if (sensor1.value()):
        
        #si no detecta linia cap dels tres sensors
    
        #ledPin.value(1)
    
        print('cuidado')
            
        car.move(0)
    else:

        #detecta linia

        #ledPin.value(0)
        print('sigue linia')
        if sensor1: #si el sensor esquerra detecta linia girem a la dreta
            car.moveright(25,0)
        if sensor3: #si el sensor dret detecta linia girem a l'esquerra
            car.moveleft(25,0)
        if sensor2: #si el sensor del mig detecta linia seguim recta
            car.move(25)
    


    servo.myServoWriteAngle(0)

    #canviar posició servo

    time.sleep_ms(500)
    distance = getSonar()

#     agafa distancia

    print('Distance: ',distance,'cm' )

    #comprovar la dist. pels dos costats
    if distance < 50:

#     si hi ha objecte

       print('esquivar')
       car.move(0)
       car.moveright(50,50)
       car.move(50)
    
    servo.myServoWriteAngle(90)

    #canviar posició servo

    time.sleep_ms(500)
    distance = getSonar()

    #agafar distància

    print('Distance: ',distance,'cm' )

    if distance < 50:
        print('esquivar')
        car.moveleft(25,50)
        car.move(25)
    time.sleep_ms(1000)


